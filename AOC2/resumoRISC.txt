-diferença real entre CISC e RISC é pequena 
-RISC é uma arquitetura de computador com instruções mais simples e com simplificação do conjunto de instruções, além de várias outras melhorias 
-instruções menores e mais simples, diferentes formatos de instruções e modos de endereço, mesmo tamanho de instruções, execução em único ciclo de instrução, mais registradores, baseado em registradores ao invés de memória e execução do pipeline.
PowerPC possui o dobro de instruções da arquitetura que substituiu
-seu sucessor possuía 16 bits na palavra de instrução, enquanto que na máquina utilizando RISC, havia o padrão 32 bits para tudo. A Motorola se esforçou para verificar as instruções utilizadas mais vezes e fez essas instruções executarem em um único ciclo.
-as maquinas anteriores possuíam 8 registradores de dados de 32 bits e 8 registradores de endereços de 32 bits, a partir das sucessoras, houveram 8 registradores de ponto flutuante de 80 bits e após isso, foram estabelecidos 32 registradores gerais de 32 bits e 32 registradores de ponto flutuante com 64 bits, chegando na direção do RISC.
-Só permite registrador-registrador operações, não existindo memoria-registrador
-instruções mais simples executam mais rapidamente em um único ciclo com pouco atraso e existem mais estruturas para melhorar a velocidade do modelo.
-instruções do mesmo tamanho fazem com que mais transistores restem para outras coisas e seja mais fácil decodificar a instrução e executá-las.
-a penalidade é dada a partir do miss dado na cache, uma penalidade de cerca de 3 ciclos por instrução, retirando a vantagem que um recompilador poderia trazer. Assim o recompilador deveria ser 5 vezes mais efetivo para fazer diferença ao usuário
- para casos de vários loops sendo feitos na execução do software, o RISC é recomendado, caso do Photoshop na época, entretanto Word e Excel fazem um grande loop apenas, não funcionando tão bem nas máquinas RISC. Assim os programas pagariam essa penalidade RISC.
- É dito pelos programadores da Macintosh que são necessários alguns passos para atingir a performance desejada. Análise de performance : foca a atenção e otimização do programa nos pontos fortes da arquitetura, melhorar os algoritmos utilizados, localização da memória cache, alinhamento de dados que serão utilizados/transformados, reduzir grandes operações nas máquinas por equivalentes menores, como reduzir multiplicações inserindo “shifts”, verificar as variáveis nos registradores, optar por utilizar ponto flutuante que é muito rápido na arquitetura RISC e tentar fazer utilizar uma execução paralelo para diminuir o tempo.
